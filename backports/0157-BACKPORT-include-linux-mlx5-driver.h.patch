From: Valentine Fatiev <valentinef@mellanox.com>
Subject: [PATCH] BACKPORT: include/linux/mlx5/driver.h

Change-Id: I16e9a61032a472b5f38138f7404206a303412edc
---
 include/linux/mlx5/driver.h | 28 +++++++++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)

--- a/include/linux/mlx5/driver.h
+++ b/include/linux/mlx5/driver.h
@@ -33,6 +33,8 @@
 #ifndef MLX5_DRIVER_H
 #define MLX5_DRIVER_H
 
+#include "../../../compat/config.h"
+
 #include <linux/kernel.h>
 #include <linux/completion.h>
 #include <linux/pci.h>
@@ -53,9 +55,16 @@
 #include <linux/mlx5/device.h>
 #include <linux/mlx5/doorbell.h>
 #include <linux/mlx5/eq.h>
+#ifdef HAVE_TIMECOUNTER_H
 #include <linux/timecounter.h>
+#else
+#include <linux/clocksource.h>
+#endif
 #include <linux/ptp_clock_kernel.h>
 #include <net/devlink.h>
+#include <linux/net_tstamp.h>
+#include <linux/llist.h>
+
 
 #define MLX5_ADEV_NAME "mlx5_core"
 
@@ -477,9 +486,11 @@ struct mlx5_core_health {
 	struct workqueue_struct	       *wq;
 	unsigned long			flags;
 	struct work_struct		fatal_report_work;
+#ifdef HAVE_DEVLINK_HEALTH_REPORT_SUPPORT
 	struct work_struct		report_work;
 	struct devlink_health_reporter *fw_reporter;
 	struct devlink_health_reporter *fw_fatal_reporter;
+#endif /* HAVE_DEVLINK_HEALTH_REPORT_SUPPORT */
 	struct mlx5_fw_crdump		*crdump;
 	struct mlx5_health_recoveries	recoveries;
 };
@@ -574,6 +585,9 @@ struct mlx5_fc_stats {
 	unsigned long sampling_interval; /* jiffies */
 	u32 *bulk_query_out;
 	struct mlx5_fc_pool fc_pool;
+#if (LINUX_VERSION_CODE <= KERNEL_VERSION(3,6,11))
+	char *fc_cache_name;
+#endif
 };
 
 struct mlx5_events;
@@ -656,6 +670,9 @@ struct mlx5_priv {
 	/* IRQ table valid only for real pci devices PF or VF */
 	struct mlx5_irq_table   *irq_table;
 	struct mlx5_eq_table	*eq_table;
+#ifndef HAVE_PCI_IRQ_API
+	struct msix_entry       *msix_arr;
+#endif
 
 	/* pages stuff */
 	struct mlx5_nb          pg_nb;
@@ -871,9 +888,13 @@ struct mlx5_clock {
 	struct mlx5_nb             pps_nb;
 	seqlock_t                  lock;
 	struct hwtstamp_config     hwtstamp_config;
+#if (defined (CONFIG_PTP_1588_CLOCK) || defined(CONFIG_PTP_1588_CLOCK_MODULE))
 	struct ptp_clock          *ptp;
 	struct ptp_clock_info      ptp_info;
+#ifdef HAVE_PTP_CLOCK_INFO_N_PINS
 	struct mlx5_pps            pps_info;
+#endif
+#endif
 	struct mlx5_timer          timer;
 };
 
@@ -1047,8 +1068,13 @@ struct mlx5_cmd_work_ent {
 	int			page_queue;
 	u8			status;
 	u8			token;
+#ifdef HAVE_KTIME_GET_NS
 	u64			ts1;
 	u64			ts2;
+#else
+	struct timespec		ts1;
+	struct timespec		ts2;
+#endif
 	u16			op;
 	bool			polling;
 	/* Track the max comp handlers */
@@ -1182,7 +1208,7 @@ void mlx5_cmd_allowed_opcode(struct mlx5
 struct mlx5_async_ctx {
 	struct mlx5_core_dev *dev;
 	atomic_t num_inflight;
-	struct wait_queue_head wait;
+	wait_queue_head_t wait;
 };
 
 struct mlx5_async_work;
