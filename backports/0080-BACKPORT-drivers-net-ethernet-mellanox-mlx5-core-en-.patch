From: Valentine Fatiev <valentinef@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/en/xsk/rx.h

Change-Id: I8472530f3805ca75d05238609290d66a0e02377f
---
 .../ethernet/mellanox/mlx5/core/en/xsk/rx.h   | 21 +++++++++++++++++++
 1 file changed, 21 insertions(+)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en/xsk/rx.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/xsk/rx.h
@@ -4,11 +4,27 @@
 #ifndef __MLX5_EN_XSK_RX_H__
 #define __MLX5_EN_XSK_RX_H__
 
+#ifdef HAVE_XSK_SUPPORT
+
 #include "en.h"
+#ifdef HAVE_NDO_XSK_WAKEUP
+#ifdef HAVE_XDP_SOCK_DRV_H
 #include <net/xdp_sock_drv.h>
+#else
+#include <net/xdp_sock.h>
+#endif
+#endif
 
 /* RX data path */
 
+#ifndef HAVE_XSK_BUFF_ALLOC
+bool mlx5e_xsk_pages_enough_umem(struct mlx5e_rq *rq, int count);
+int mlx5e_xsk_page_alloc_umem(struct mlx5e_rq *rq,
+			      struct mlx5e_dma_info *dma_info);
+void mlx5e_xsk_page_release(struct mlx5e_rq *rq,
+			    struct mlx5e_dma_info *dma_info);
+void mlx5e_xsk_zca_free(struct zero_copy_allocator *zca, unsigned long handle);
+#endif
 struct sk_buff *mlx5e_xsk_skb_from_cqe_mpwrq_linear(struct mlx5e_rq *rq,
 						    struct mlx5e_mpw_info *wi,
 						    u16 cqe_bcnt,
@@ -19,6 +35,7 @@ struct sk_buff *mlx5e_xsk_skb_from_cqe_l
 					      struct mlx5e_wqe_frag_info *wi,
 					      u32 cqe_bcnt);
 
+#ifdef HAVE_XSK_BUFF_ALLOC
 static inline int mlx5e_xsk_page_alloc_umem(struct mlx5e_rq *rq,
 					    struct mlx5e_dma_info *dma_info)
 {
@@ -35,7 +52,9 @@ static inline int mlx5e_xsk_page_alloc_u
 
 	return 0;
 }
+#endif
 
+#ifdef HAVE_NDO_XSK_WAKEUP
 static inline bool mlx5e_xsk_update_rx_wakeup(struct mlx5e_rq *rq, bool alloc_err)
 {
 	if (!xsk_umem_uses_need_wakeup(rq->umem))
@@ -48,5 +67,7 @@ static inline bool mlx5e_xsk_update_rx_w
 
 	return false;
 }
+#endif
 
+#endif /* HAVE_XSK_SUPPORT */
 #endif /* __MLX5_EN_XSK_RX_H__ */
