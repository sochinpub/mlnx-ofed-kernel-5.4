From: Nitzan Carmi <nitzanc@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/nvme/target/io-cmd-file.c

Change-Id: Ia0735339e09b80725da0125d7f8aeb775727d380
---
 drivers/nvme/target/io-cmd-file.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

--- a/drivers/nvme/target/io-cmd-file.c
+++ b/drivers/nvme/target/io-cmd-file.c
@@ -4,6 +4,7 @@
  * Copyright (c) 2017-2018 Western Digital Corporation or its
  * affiliates.
  */
+#ifdef HAVE_FS_HAS_KIOCB
 #ifdef pr_fmt
 #undef pr_fmt
 #endif
@@ -21,8 +22,12 @@ int nvmet_file_ns_revalidate(struct nvme
 	struct kstat stat;
 	int ret;
 
+#ifdef VFS_GETATTR_HAS_4_PARAMS
 	ret = vfs_getattr(&ns->file->f_path, &stat, STATX_SIZE,
 			  AT_STATX_FORCE_SYNC);
+#else
+	ret = vfs_getattr(&ns->file->f_path, &stat);
+#endif
 	if (!ret)
 		ns->size = stat.size;
 	return ret;
@@ -117,7 +122,11 @@ static ssize_t nvmet_file_submit_bvec(st
 		rw = READ;
 	}
 
+#ifdef HAVE_IOV_ITER_IS_BVEC_SET
 	iov_iter_bvec(&iter, rw, req->f.bvec, nr_segs, count);
+#else
+	iov_iter_bvec(&iter, ITER_BVEC | rw, req->f.bvec, nr_segs, count);
+#endif
 
 	iocb->ki_pos = pos;
 	iocb->ki_filp = req->ns->file;
@@ -199,7 +208,9 @@ static bool nvmet_file_execute_io(struct
 	 * A NULL ki_complete ask for synchronous execution, which we want
 	 * for the IOCB_NOWAIT case.
 	 */
+#ifdef HAVE_IOCB_NOWAIT
 	if (!(ki_flags & IOCB_NOWAIT))
+#endif
 		req->f.iocb.ki_complete = nvmet_file_io_done;
 
 	ret = nvmet_file_submit_bvec(req, pos, bv_cnt, total_len, ki_flags);
@@ -207,6 +218,7 @@ static bool nvmet_file_execute_io(struct
 	switch (ret) {
 	case -EIOCBQUEUED:
 		return true;
+#ifdef HAVE_IOCB_NOWAIT
 	case -EAGAIN:
 		if (WARN_ON_ONCE(!(ki_flags & IOCB_NOWAIT)))
 			goto complete;
@@ -220,6 +232,7 @@ static bool nvmet_file_execute_io(struct
 		if ((ki_flags & IOCB_NOWAIT))
 			return false;
 		break;
+#endif
 	}
 
 complete:
@@ -266,9 +279,11 @@ static void nvmet_file_execute_rw(struct
 		req->f.mpool_alloc = false;
 
 	if (req->ns->buffered_io) {
+#ifdef HAVE_IOCB_NOWAIT
 		if (likely(!req->f.mpool_alloc) &&
 				nvmet_file_execute_io(req, IOCB_NOWAIT))
 			return;
+#endif
 		nvmet_file_submit_buffered_io(req);
 	} else
 		nvmet_file_execute_io(req, 0);
@@ -409,3 +424,4 @@ u16 nvmet_file_parse_io_cmd(struct nvmet
 		return NVME_SC_INVALID_OPCODE | NVME_SC_DNR;
 	}
 }
+#endif /* HAVE_FS_HAS_KIOCB */
